name: Backend CI #define the name of the workflow

on: # define the event that triggers the workflow
  push: # trigger the workflow on a push event
    branches: # specify the branches to monitor
      - main # Run CI/CD pipeline only when code is pushed to the main branch

jobs: # define the jobs that will run in this workflow
  test: # Job name(test job)
    name: Run Tests # Display  name of the job
    runs-on: self-hosted

    strategy: # define a strategy for running the job
      matrix: # use a matrix to run the job in multiple environments
        node-version: [22] # Test on multiple Node.js versions

    environment: MONGO_URI # define the environment variable for MongoDB connection

    steps: #define a sequence of steps to be executed in this job
      - name: Checkout Code
        uses: actions/checkout@v3 # clone the repository code to the runner

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3  7777
        with:
          node-version: ${{ matrix.node-version }}

      - name: Print Env Secret

        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          echo "Secret 1 is: $MONGO_URI"
          echo "Secret 2 is: $JWT_SECRET"
          echo "Secret 3 is: $PORT"

      - run: pm2 stop all

      # Install dependencies for backend
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          npm install --global yarn
          yarn --version
          yarn install

      # Install dependencies for frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          df -h
          sudo rm -rf ./build
          yarn install
          yarn run build

      # Run backend tests
      #- name: Run Backend Tests
      # env:
      #    MONGO_URI: ${{ secrets.MONGO_URI }}
      #    JWT_SECRET: ${{ secrets.JWT_SECRET }}
      #   PORT: ${{ secrets.PORT }}
      #  working-directory: ./backend
      #  run: npm test

      - run: npm ci
      - run: |
          cd ./backend
          touch .env
          echo "${{ secrets.PROD }}" > .env

      - run: pm2 start all

      - run: pm2 restart all
